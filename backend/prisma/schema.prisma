// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Instructor {
  id                     Int                      @id @default(autoincrement())
  name                   String
  instructorAvailability InstructorAvailability[]
  lesson                 Lesson[]
}

model InstructorAvailability {
  instructorId Int
  dateTime     DateTime
  instructor   Instructor @relation(fields: [instructorId], references: [id])

  @@id([instructorId, dateTime])
}

model Customer {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  lesson   Lesson[]
  children  Children[]
}

model Lesson {
  id           Int        @id @default(autoincrement())
  instructorId Int
  customerId   Int
  dateTime     DateTime
  status       Status
  instructor   Instructor @relation(fields: [instructorId], references: [id])
  customer     Customer   @relation(fields: [customerId], references: [id])
  lessonAttendance LessonAttendance[]
}

enum Status {
  booked
  completed
  canceled
}

model Admins {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
}

model Children {
  id                Int                 @id @default(autoincrement())
  customerId        Int
  name              String
  customer          Customer            @relation(fields: [customerId], references: [id])
  lessonAttendance  LessonAttendance[]
}

model LessonAttendance {
  lessonId   Int
  childrenId  Int
  lesson     Lesson   @relation(fields: [lessonId], references: [id])
  children    Children  @relation(fields: [childrenId], references: [id])

  @@id([lessonId, childrenId])
}